#Generated by Qingtian Tim Guan after Proteinortho breakdown the workstation. To save CPU time for matrix generating for P/A calculation.
# Part 1: Process input and create a dictionary
data = {}
current_group = 0

with open("input.txt", 'r') as infile:
    for line in infile:
        line = line.strip()

        if line.startswith(">Cluster"):
            current_group += 1
            current_group_str = "Group" + str(current_group)
        elif line:
            protein_info = line.split(',')[1].split('>')[1].split()  # Extract the protein information
            protein_id = protein_info[0].rstrip("...")  # Remove "..." from the end of the protein ID
            if current_group_str not in data:
                data[current_group_str] = {}
            genome = "_".join(protein_id.split('_')[:2])
            data[current_group_str].setdefault(genome, set()).add(protein_id)

# Part 2: Generate the matrix
matrix = []
header = ["Group"] + list(set(genome for group_data in data.values() for genome in group_data.keys()))
matrix.append(header)

for group, group_data in data.items():
    row = [group]
    for genome in header[1:]:
        gene = group_data.get(genome, {"*"})
        row.append(next(iter(gene)))
    matrix.append(row)

# Output the matrix
with open("output_matrix.txt", 'w') as output_file:
    for row in matrix:
        output_file.write("\t".join(row) + "\n")
